steps:
  - op: http_request
    id: get_customers
    request:
      source: "bigcommerce"
      url: "https://api.bigcommerce.com/stores/{{ var('store_hash') }}/{{ var('api_version') }}/customers"
      method: GET
      parameters_expression: |
        return {
          "limit": 5, # intentionally small limit for testing; use 100 or even 1000 for production
          "page": context.var("next_page") if context.is_var_defined("next_page") else 1
        }
      headers:
        "Accept": "application/json"
    response:
      success_status: [200]
      tables: 
        - source: "stage"
          table: "bc_customers"
          columns: {"id": "text", "first_name": "text", "last_name": "text"}
      parser_expression: |
        def evaluate(context, response):
          json_data = response.json()
          current_page = json_data["meta"]["pagination"]["current_page"]; # integer
          total_pages = json_data["meta"]["pagination"]["total_pages"]; # integer
          return {
            "variables": {
              "next_page": {
                "value": current_page + 1,
                "scope": "local"
              }
            },
            "tables": {
              "bc_customers": json_data["data"]
            },
            "while": current_page < total_pages
          }